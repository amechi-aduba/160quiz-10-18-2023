import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'twoStrings' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts following parameters:
     *  1. STRING s1
     *  2. STRING s2
     */
    
public static String checkStrings(List<String> s1, List<String> s2) {
    if (s2.isEmpty()) {
        return "NO";
    }
    String first = s2.get(0);
    if (s1.contains(first)) {
        return "YES";
    } else {
        List<String> modifiedS2 = new ArrayList<>(s2);
        modifiedS2.remove(first);
        return checkStrings(s1, modifiedS2);
    }
}

public static String twoStrings(String s1, String s2) {
    String[] s1_s = s1.split("");
    String[] s2_s = s2.split("");
    List<String> s1_split = Arrays.asList(s1_s);
    List<String> s2_split = Arrays.asList(s2_s);
    return checkStrings(s1_split, s2_split);
}
}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int q = Integer.parseInt(bufferedReader.readLine().trim());

        IntStream.range(0, q).forEach(qItr -> {
            try {
                String s1 = bufferedReader.readLine();

                String s2 = bufferedReader.readLine();

                String result = Result.twoStrings(s1, s2);

                bufferedWriter.write(result);
                bufferedWriter.newLine();
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        });

        bufferedReader.close();
        bufferedWriter.close();
    }
}
